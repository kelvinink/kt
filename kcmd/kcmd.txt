>>>>>>>>>> alias
Description:
###############
List alias in this shell

Example:
###############
alias    : print all alias that you can use
<<<<<<<<<< alias


>>>>>>>>>> fuser
Description:
###############
List process id with specific files open 

Example:
###############
fuser -k -n tcp 80                                           : kill the process with tcp 80 opened
<<<<<<<<<< fuser


>>>>>>>>>> dlv
Description:
###############
Go debug tool

Example:
###############
dlv debug --headless --listen=:2345 --log --api-version=2    : start remote debug server
<<<<<<<<<< dlv


>>>>>>>>>> go
Description:
###############
Go command line

Example:
###############
go env                                                 : list go environment variables
go test                                                : run test for all test files
go test abc_test.go                                    : run test for file "abc_test.go"
go test -v abc_test.go                                 : run test for file "abc_test.go", show test details
go clean -testcache && go test                         : clean cache and run test
<<<<<<<<<< go



>>>>>>>>>> git
Description: 
###############
Git is a version control tool

Example:
###############
git blame myfile                                       : show who modifies each line
git log                                                : show all commit logs
git log -p --follow myfile                             : show the changes in each commit for the file 'myfile' 
git reflog                                             : show all recent actions, help to find lost commit hash

git clean -f                                           : force remove untracked files
git clean -dff                                         : force remove untracked files and directory

git stash                                              : stashing changes and keep working dir clean
git stash pop                                          : restore stashed changes back to working dir

git branch                                             : show branches
git branch -d mybranch                                 : delete a branch
git checkout -b newbranch                              : create a new branch "newbranch"
git checkout -- myfile                                 : checkout "myfile" from HEAD and cover the one in working directory
git checkout .                                         : checkout all files from HEAD and cover those in working directory

git reset HEAD myfile                                  : unstage "myfile" and put it into working directory
git reset HEAD~1                                       : same as "git reset --mixed HEAD~1"
git reset --mixed HEAD~1                               : reset HEAD to HEAD~1 and put changes into working directory
git reset --soft HEAD~1                                : reset HEAD to HEAD~1 and put changes into stage
git reset --hard HEAD~1                                : reset HEAD to HEAD~1 and clean working directory and stage

git commit --amend -m'amend commit'                    : amending the most recent commit

git cherry-pick 2e3c1a1                                : pick changes from 2e3c1a1 and add to current branch

git revert HEAD                                        : revert changes of HEAD
git revert -m 1 2e3c1a1                                : 2e3c1a1 is a merge commit and -m option specify the parent number

git remote -v                                          : list remote repository

git config user.name kelvin                            : set user name
git config user.email kelvinaddr@gmail.com             : set user email
git config --global user.name kelvin                   : set global user name
git config --global user.email kelvinaddr@gmail.com    : set global user email

git diff                                               : diff between cwd and index
git diff 7988362                                       : diff between commit "7988362" and cwd
git diff --cached                                      : diff between HEAD and cwd
git diff --cached 7988362                              : diff between commit "7988362" and index
git diff 7988362 3892323                               : diff between two commits

Git messages type                                      : feat, fix, docs, style, refactor, perf, test, chore, revert, merge, sync
<<<<<<<<<< git



>>>>>>>>>> grep
Description:
###############
File patter searcher

Example:
###############
Searching pattern in file /etc/passwd:
grep usr /etc/passwd                            : search lines that contain substring "usr"
grep -i usr /etc/passwd                         : search lines that contain substring "usr", and ignore case
grep -v usr /etc/passwd                         : search lines that do not contain substring "usr"
grep -c usr /etc/passwd                         : print number of lines that contain substring "usr"
grep -C 3 usr /etc/passwd                       : print match lines and it's leading and trailing 3 lines

Searching pattern in directory:             
grep -r usr /etc                                : search recursively in directory "/etc"
<<<<<<<<<< grep



>>>>>>>>>> sed
Description:    
###############
Stream editor

Example:        
###############
sed "s/usr/User/g" /etc/passwd                  : substitute "usr" with "User"
sed "/usr/d" /etc/passwd                        : delete lines contain substring "usr"
sed "/usr/q" /etc/passwd                        : find first line contains substring "usr" and quit
sed "/^$/d"  /etc/passwd                        : delete blank lines
sed -i.bak "s/usr/User/g" /tmp/somefile         : modifiy inplace and save original file with ".bak" extension
Extra:
###############
Posix regex meta characters:
^  $  .  []  *

Extended regex meta characters:
^  $  .  []  *  ()  {}  ?  +  |

References:
###############
http://www.ing.iac.es/~docs/external/bash/abs-guide/x16155.html    : sed examples
<<<<<<<<<< sed



>>>>>>>>>> vscode
Description:    
###############
VScode hotkeys

Example:        
###############
shift + ctrl + cmd + ->                         : code block selection
option + up                                     : move selected block up
option + down                                   : move selected block down
option + shift + up                             : copy up
option + shift + down                           : copy down
cmd + d                                         : select words
shift + option + cmd + down                     : select multiple lines
option + cmd                                    : close code block
cmd + o                                         : close all code blocks
cmd + ->                                        : to end of line
cmd + <-                                        : to start of line
cmd + shift + ->                                : select to end of line
cmd + shift + <-                                : select to start of line
cmd + [                                         : unindent
cmd + ]                                         : indent
ctrl + `                                        : open terminal
<<<<<<<<<< vscode



>>>>>>>>>> goland
Description:    
###############
Goland hotkeys

Example:        
###############
double shift                                    : find everywhere
f2                                              : navigate between code issue
shift + cmd + f                                 : find all
cmd + f                                         : find in this file
cmd + r                                         : replace
cmd + e                                         : view recent files
cmd + /                                         : comment/uncomment
cmd + b                                         : to declaration or usage
cmd + n                                         : generate
cmd + w                                         : close window
cmd + [                                         : back : super useful for tracing code
cmd + ]                                         : forward : super useful for tracing code
cmd + z                                         : undo
cmd + s                                         : save
cmd + ~                                         : switch project window
tab                                             : indent
shift + tab                                     : unindent
ctrl + opt + h                                  : show call hierarchy
opt + f7                                        : find usages
opt + enter                                     : show intention actions and quick fixes
opt + t                                         : refactor this
opt + v                                         : version control

<<<<<<<<<< goland



>>>>>>>>>> tmux
Description:
###############
A terminal multiplexer

Example:
###############
tmux new -s mysession -n window0                 : create session "mysession", first window named window0
tmux attach -t mysession                         : attaches to "mysession"

Key Stroke: start with prefix: "ctrl + b"
d                                                : Detach
:                                                : Command mode
c                                                : New window
0..9                                             : Window index
,                                                : Rename window
&                                                : Close window
%                                                : Split vertically
"                                                : Split horizontally
x                                                : Close pane
space                                            : Pane layout
q                                                : Pane number
Up,Down,Left,Right
<<<<<<<<<< tmux



>>>>>>>>>> export
Description:        
###############
Exporting shell variables

Example:        
###############
export http_proxy=http://10.20.47.147:3128       : use http proxy "http://10.20.47.147:3128"
export https_proxy=https://10.20.47.147:3128     : use https proxy "https://10.20.47.147:3128"  
export PATH="/usr/local/bin:$PATH"               : add "/usr/local/bin" to PATH
<<<<<<<<<< export



>>>>>>>>>> ssh
Description:        
###############
SSH client

Example:        
###############
ssh root@localhost                              : login "localhost" as user "root"
ssh -i path/to/private_key root@localhost       : login "localhost" as user "root", provide private key file
<<<<<<<<<< ssh



>>>>>>>>>> find
Description:        
###############
Find files

Example:        
###############
find / -name myfile                             : find files whose name contain "myfile" substring
<<<<<<<<<< find



>>>>>>>>>> crontab
Description:        
###############
Cofigure cronjob plan
Crontab tool: https://crontab.guru

Example:        
###############
crontab -l                                      : list crontab
crontab -e                                      : edit crontab
<<<<<<<<<< crantab



>>>>>>>>>> docker
Description:        
###############
Docker

Example:        
###############
docker login                                    : login dockerhub
docker pull ubuntu                              : pull ubuntu image from dockerhub
docker images                                   : show all images
docker rmi myimage                              : remove image "myimage"
docker ps                                       : show running containers
docker ps -a                                    : show all containers, including stopped one
docker network create mynet                     : create new network "mynet" 
docker network ls                               : lis all network
docker network inspect 288khfai                 : show settings of network "288khfai"
docker start mycontainer                        : start instance "mycontainer"
docker stop mycontainer                         : stop instance "mycontainer"
docker rm mycontainer                           : remove container "mycontainer"
docker rm $(docker ps -aq)                      : remove all containers
docker-compose up --scale myservice=3           : scaling 3 "myservice" instances
docker exec -it ubuntu bash                     : connect to container "ubuntu" and run bash shell
docker save -o ubuntu.tar  ecaf60f29fef         : save image "ecaf60f29fef" as "ubuntu.tar"
docker image import ~/ubuntu.tar                : import image from "ubuntu.tar"
docker cp mycontainer:/path/to/file ./          : copy file from container to host machine
<<<<<<<<<< docker



>>>>>>>>>> mysql
Description:        
###############
MySQL client

Example:        
###############
mysql -h host -u user -p                                                    : login mysql
mysql -h host -u user -p mydb                                               : login mysql and switch to "mydb"
mysql -h host -u user -p mydb < mydumpedfile.sql                            : import mysql dumped file
mysql -h host -u user -p -e "SELECT * FROM mytable;" mydb > output.txt      : export query result to "output.txt"

show databases;                                                             : show all databases
use mydb;                                                                   : using "mydb"
show tables;                                                                : show all tables in current databases
show index from mydb.mytable                                                : show index "of mydb.mytable"
show variables like "%slow%"                                                : show slow log related variables
                            
set global slow_query_log="ON"                                              : turn on slow log
set global slow_query_log_file="path/to/file"                               : set slow log file
set global log_query_time=10                                                : log to slow log if query time exceed 10ms

from_unixtime()                                                             : convert unixtime to timestamp
cast()                                                                      : convert string to datetype
extract()                                                                   : extract a part from date type
date_format()                                                               : formatting date type
<<<<<<<<<< mysql



>>>>>>>>>> mysqldump
Description:        
###############
MySQL backup program

Example:        
###############
mysqldump -u user -p --all-databases > mydumpedfile.sql                    : backup all databases
mysqldump -u user -p --databases mydb1 mydb2 > mydumpedfile.sql            : backup "mydb1" and "mydb2"
mysqldump -u user -p mydb t1 t2 t3 > mydumpedfile.sql                      : backup 3 tables of "mydb"
<<<<<<<<<< mysqldump



>>>>>>>>>> sql
Description:        
###############
Most frequently used SQL examples

Example:        
###############
CREATE USER kelvin@localhost IDENTIFIED BY 'mypass';                      : create new user and grant full privileges
GRANT ALL PRIVILEGES on *.* TO kelvin@localhost with GRANT OPTION;
FLUSH PRIVILEGES;

SELECT * INTO OUTFILE 'output.txt' FROM mytable;                          : save query result to "output.txt"
<<<<<<<<<< sql



>>>>>>>>>> passwd
Description:        
###############
Change password

Example:        
###############
passwd                                          : change password for current user
passwd otheruser                                : change password for "otheruser"
<<<<<<<<<< passwd



>>>>>>>>>> journalctl
Description:        
###############
Query systemd journal

Example:        
###############
journalctl                                      : show all journal
journalctl -e                                   : show the end of journal
journalctl -eu docker                           : show the end of "docker" related journal
<<<<<<<<<< journalctl



>>>>>>>>>> systemctl
Description:        
###############
System service control

Example:        
###############
systemctl start vsftpd                          : start vsftpd
systemctl stop vsftpd                           : stop vsftpd
systemctl restart vsftpd                        : restart vsftpd
systemctl status 12345                          : show process(pid=12345) status
<<<<<<<<<< systemctl



>>>>>>>>>> ps
Description:        
###############
Show process status

Example:        
###############
ps                                              : disply processes of current shell
ps aux                                          : display detail info of all processes
ps -ef                                          : same as "ps aux"
<<<<<<<<<< ps



>>>>>>>>>> pkill
Description:        
###############
Kill process by name

Example:        
###############
pkill top                                       : kill process "top" by name, partial match
pkill -f top                                    : kill process "top" by name, full match
<<<<<<<<<< pkill



>>>>>>>>>> kill
Description:        
###############
Kill a process

Example:        
###############
kill 13601                                      : kill process 13601
kill -9 13601                                   : force kill process 13601
<<<<<<<<<< kill



>>>>>>>>>> killall
Description:        
###############
Kill processes by name

Example:        
###############
killall xlogo                                   : kill all processes named "xlogo"
killall -u kelvin xlogo                         : kill all processes named "xlogo" and belong to user "kelvin"
killall -r x.*                                  : kill by regex, kill all precesses whose name start with "x"
<<<<<<<<<< killall



>>>>>>>>>> pstree
Description:        
###############
Display process tree

Example:        
###############
pstree                                          : display a beautiful processes tree
<<<<<<<<<< pstree



>>>>>>>>>> jobs
Description:        
###############
Display jobs of current terminal

Example:        
###############
jobs                                            : display jobs of current terminal
fg %1                                           : bring job numbered "1" back to foreground
<<<<<<<<<< jobs


>>>>>>>>>> nohup
Description:        
###############
Run program in background without hangup

Example:        
###############
setsid nohup ./output/bootstrap.sh &!           : display jobs of current terminal
<<<<<<<<<< nohup



>>>>>>>>>> wc
Description:        
###############
Word count

Example:        
###############
wc /etc/passwd                                  : display character/word/line count
wc -c /etc/passwd                               : display character count
wc -w /etc/passwd                               : display word count
wc -l /etc/passwd                               : display line count
<<<<<<<<<< wc



>>>>>>>>>> conda
Description:        
###############
Virtual environment management tool

Example:        
###############
conda create -n myvenv python=3.6               : create a new virtual environment "venv" with python3.6 insalled
<<<<<<<<<< conda



>>>>>>>>>> python
Description:        
###############
Python

Example:        
###############
pip list -v                                     : list all installed packages
<<<<<<<<<< python



>>>>>>>>>> tar
Description:        
###############
An archive tool

Example:        
###############
tar zcvf -o mytar.tar.gz .                      : create an archive and gzip it for current dir
tar zxvf mytar.tar.gz                           : unzip and extract archive "mytar.tar.gz"
<<<<<<<<<< tar



>>>>>>>>>> gzip
Description:        
###############
Compressing/decompressing tool for .gz format

Example:        
###############
gzip myfile                                     : compress "myfile" as "myfile.gz"
gzip myfile.gz                                  : decompress "myfile.gz" as "myfile"
<<<<<<<<<< gzip



>>>>>>>>>> apt
Description:        
###############
Advanced package tool

Example:        
###############
apt-get update                                  : update package repository
apt-get upgrade                                 : upgrade packages
apt-get install vim                             : install "vim"

apt-cache search vim                            : search package "vim"
apt-cache show vim                              : display description of package "vim"

apt-get remove vim                              : remove package "vim"
<<<<<<<<<< apt



>>>>>>>>>> dpkg
Description:        
###############
Advanced package tool

Example:        
###############
dpkg --list                                     : list all installed packages
dpkg --install vim.fc7-8386.deb                 : install the package "vim.fc7-8386.deb" downloaded by yourself
<<<<<<<<<< dpkg



>>>>>>>>>> cat
Description:        
###############
Concatenate and print files 

Example:        
###############
cat file1 file2 > file3                         : concatenate "file1" , "file2" and store in file3
cat -n myfile                                   : cat with line number
cat -s myfile                                   : cat without empty lines(squeeze empty lines)
<<<<<<<<<< cat



>>>>>>>>>> awk
Description:        
###############
Patern directed file processing

Example:        
###############
awk '{printf "%s, ",$0}' myfile                 : concatenate each line of "myfile" as one line sperated by white space
<<<<<<<<<< awk


>>>>>>>>>> nslookup
Description:        
###############
Translate domain name to ip address

Example:        
###############
nslookup                                        : translate domain name to ip address
<<<<<<<<<< nslookup



>>>>>>>>>> netstat
Description:        
###############
Show network status

Example:        
###############
netstat -nlp                                    : show only listening socket, include its pid, numeric address
netstat -ie                                     : show interface trasactions
netstat -s                                      : show network status by protocol
netstat -rn                                     : show ip routing table, gateway
<<<<<<<<<< netstat



>>>>>>>>>> route
Description:        
###############
Show routing status

Example:        
###############
route                                           : show ip routing table, gateway
route -n                                        : show ip routing table, gateway, in number
<<<<<<<<<< route



>>>>>>>>>> nc
Description:        
###############
Netcat

Example:        
###############
nc -v localhost 5000                            : connect to localhost:5000 (as a client)
nc -lk 9000                                     : listening on port 9000 (as a server)
nc -zv 8.8.8.8 80                               : scan 8.8.8.8:80 to check whether it's opened
<<<<<<<<<< nc



>>>>>>>>>> mtr
Description:        
###############
Mtr is a network diagnostic tool like traceroute

Example:        
###############
mtr google.com                                  : diagnose the route to google.com
mtr -n 8.8.8.8                                  : force using number ip, no dns
<<<<<<<<<< mtr



>>>>>>>>>> ifconfig
Description:        
###############
Network interface configuration tool

Example:        
###############
ifconfig                                        : display network interface configurations
ifconfig eth0 up                                : bring interface eth0 up
ifconfig eth0 192.168.1.100/24 gw 192.168.1.1   : manually set ip address and gateway
<<<<<<<<<< ifconfig



>>>>>>>>>> df
Description:        
###############
Display file system disk unstage

Example:        
###############
df -h                                           : display disk usage in human readable way
<<<<<<<<<< df


>>>>>>>>>> du
Description:        
###############
Display file space usage

Example:        
###############
du                                              : display disk usage for current working dir
du -h                                           : display disk usage in human readable way
du -h /tmp                                      : display disk usage for dir "/tmp" and its subdir
du -h -d 1 /tmp                                 : display disk usage for dir "/tmp" and its subdir whose depth is 1
du -sh /tmp                                     : display disk usage for dir "/tmp" only (summarize)
du -sh *                                        : display disk usage for all contents of current directory
<<<<<<<<<< du


>>>>>>>>>> df
Description:        
###############
Report file system disk usage

Example:        
###############
df -h                                           : display file system disk usage in human readable way
<<<<<<<<<< df


>>>>>>>>>> mount
Description:        
###############
Mount a device to file system

Example:        
###############
mount /dev/sdb1 /mnt/myusb                      : mount "/dev/sdb1" to "/mnt/myusb"
<<<<<<<<<< mount



>>>>>>>>>> umount
Description:        
###############
Umount a device from file system

Example:        
###############
umount /dev/sdb1                                : unmount "/dev/sdb1"
<<<<<<<<<< umount



>>>>>>>>>> tail
Description:        
###############
Outpu last part of file

Example:        
###############
tail                                            : show 10 lines from end of file
tail -n                                         : show 3 lines from end of file
tail -f /var/log/syslog                         : show realtime appened data of file
<<<<<<<<<< tail




>>>>>>>>>> chown
Description:
Change owner
###############

Example:
###############
chown root:root jdk-11.0.6.tar.gz               : change the owner and group of "jdk-11.0.6.tar.gz" as root
chown -R root:root /var/html/                   : change the owner and group of dir "/var/html" as root
<<<<<<<<<< chown




>>>>>>>>>> usermod
Description:
###############
Modify user account

Example:
###############
usermod -aG docker kelvin                       : Add user "kelvin" to group "docker"
<<<<<<<<<< usermod



>>>>>>>>>> chmod
Description:
###############
Change file, dir access control list

Example:
###############
chmod 644 /etc/passwd                           : change ACL of "/etc/passwd" to "644"
chmod -R 775 /var/www                           : change ACL of "/var/www" dir recursively to "775"
chmod +x myprogram                              : add execute permission for current user
chmod a+x myprogram                             : add execute permission for all users
<<<<<<<<<< chmod



>>>>>>>>>> ln
Description:
###############
Create a link

Example:
###############
ln origin_file link_file                        : create a link file that points to original file
ln -s origin_file link_file                     : create a symbolic link file that points to original file
<<<<<<<<<< ln



>>>>>>>>>> g++
Description:        
###############
C++ compiler

Example:        
###############
g++ -std=c++11 sorting.cpp                      : compile "sorting.cpp" with c++11 standard
g++ -o myprogram file1.cpp file2.cpp            : compile "file1.cpp" and "file2.cpp" together and output a program name "myprogram"
<<<<<<<<<< g++



>>>>>>>>>> ldd
Description:        
###############
Print shared dependencies (linux)
The equivalent on MacOSX is: otool -L

Example:        
###############
ldd my_executable                               : print the shared dependencies of "my_executable"
<<<<<<<<<< ldd



>>>>>>>>>> swap
Description:        
###############
Swap utilities: dd, mkswap, swapon, /etc/fstab

Example:        
###############
dd if=/dev/zero of=/media/swap.img bs=1024 count=4M                   : create a file whose size is 4G
mkswap /media/swap.img                                                : make the file a swap
swapon /media/swap.img                                                : temporary turn on the swap

echo "/media/swap.img swap swap sw 0 0" >> /etc/fstab                 : turn on swap on boot time

Extra:
###############
Format of /etc/fstab file:

Device          Mount Point    File System Type   Options   Backup Option   File System Check Order
------          -----------    ----------------   -------   -------------   -----------------------
/media/swap.img swap           swap               sw        0               0
<<<<<<<<<< swap



>>>>>>>>>> scp
Description:        
###############
Securely fransfer files

Example:        
###############
scp root@remotehost:/path/to/file .                                   : copy file from remotehost to current directory
scp -i paht/to/remote/private/key root@remotehost:/path/to/file .     : copy file from remotehost to current directory
scp -r root@remotehost:/path/to/dir .                                 : copy dir from remotehost to current directory
scp ./* root@remotehost:/path/to/file                                 : copy file from localhost to remotehost
scp -r ./* root@remotehost:/path/to/dir                               : copy dir from localhost to remotehost
<<<<<<<<<< scp



>>>>>>>>>> configuration files
Description:
###############

Example:
###############
/etc/group                         : group account info
/etc/shadow                        : secure account info
/etc/passwd                        : user account info
/etc/gshadow                       : secure group account info

/etc/profile                       : system level ".profile"
/etc/bash.bashrc                   : system level ".bashrc"
/etc/zprofile                      : mirror of "/etc/profile"
/etc/zshrc                         : mirror of "/etc/bash.bashrc"

/etc/hosts                         : host name and its ip mapping
/etc/hostname                      : host name of this device
/etc/resolve.conf                  : set dns server
/etc/network/interfaces            : configure network interfaces settings(autostart, ip, gateway)

/etc/cron.hourly/                  : cronjob hourly dir
/etc/cron.daily/                   : cronjob daily dir
/etc/cron.monthly/                 : cronjob monthly dir
/etc/cron.weekly/                  : cronjob weekly dir

~/.bashrc                          : bash script sourced when login
~/.bash_profile                    : sourced by bash
~/.profile                         : sourced by sh or bash
~/.zprofile                        : mirror of "~/.profile"
~/.zshrc                           : mirror of "~/.bashrc"

.git/config                        : repository config mainipulated with --file option
~/.gitconfig                       : user config mainipulated with --global option
/etc/gitconfig                     : system wide config mainipulated with --system option

~/.ssh/                            : ssh config dir
~/.ssh/authorized_keys             : remote device public key, authorize password less login to this device
~/.ssh/known_hosts                 : known remote hosts
~/.ssh/id_rsa                      : ssh private key of this device
~/.ssh/id_rsa.pub                  : ssh public key of this device

/proc/cpuinfo                      : cpu info
/proc/meminfo                      : running memory info
/proc/sys/net/ipv4/*               : network stats(tcp/ip/icmp..)
<<<<<<<<<< configuration files
